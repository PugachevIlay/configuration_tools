---
- name: Download GitLab repository to remote server
  hosts: all
  become: yes

  vars:
    execute_user: ansible
    home_path: home
    user_for_copy: developer
    project_dir: packman
    repository_ssh_link: git@gitlab.com:devops2600924/packman_project.git
    gitlab_ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9"

  remote_user: "{{ execute_user }}"

  tasks:
    - name: Create known_hosts
      ansible.builtin.file:
        path: "/{{ home_path }}/{{ user_for_copy }}/.ssh/known_hosts"
        state: touch
        owner: "{{ user_for_copy }}"
        group: "{{ user_for_copy }}"
        mode: 0600

#    - name: Add GitLab to known_hosts
#      lineinfile:
#        path: "/{{ home_path }}/{{ user_for_copy }}/.ssh/known_hosts"
#        line: "{{ host_key }}"
#        state: present
#      vars:
#        host_key: "{{ lookup('pipe', 'ssh-keyscan -t rsa gitlab.com') }}"

#    - name: Copy authorized keys {{ execute_user }} >> {{ user }} known_hosts
#      copy:
#        src: ~/.ssh/authorized_keys
#        dest: /home/{{ user_for_copy }}/.ssh/authorized_keys
#        owner: "{{ user_for_copy }}"
#        group: "{{ user_for_copy }}"
#        mode: 0600

#    - name: Add GitLab to known_hosts
#      known_hosts:
#        name: gitlab.com
#        key: "{{ gitlab_ssh_key }}"
#        path: "/{{ home_path }}/{{ user_for_copy }}/.ssh/known_hosts"

    - name: Add GitLab to known_hosts
      lineinfile:
        path: "/{{ home_path }}/{{ user_for_copy }}/.ssh/known_hosts"
        line: "{{ gitlab_ssh_key }}"
        state: present

    - name: Clone GitLab repository
      git:
        repo: "{{ repository_ssh_link }}"
        dest: "/{{ home_path }}/{{ user_for_copy }}/{{ user_for_copy }}/"
        version: main
        accept_hostkey: yes

    - name: Update repository to the latest version
      git:
        repo: "/{{ home_path }}/{{ user_for_copy }}/{{ project_dir }}/"
        remote: origin
        refspec: "+refs/heads/*:refs/remotes/origin/*"
        force: yes
      register: git_update

    - name: Show Git update result
      debug:
        var: git_update